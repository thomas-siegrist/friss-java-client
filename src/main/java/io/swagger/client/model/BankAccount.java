/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AdditionalFieldsBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
import java.util.Map;
/**
 * BankAccount
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class BankAccount extends AdditionalFieldsBase {
  @SerializedName("number")
  private String number = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("bic")
  private String bic = null;

  @SerializedName("cardHolderName")
  private String cardHolderName = null;

  public BankAccount number(String number) {
    this.number = number;
    return this;
  }

   /**
   * The bank account number
   * @return number
  **/
  @Schema(description = "The bank account number")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public BankAccount type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The bank account type
   * @return type
  **/
  @Schema(description = "The bank account type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public BankAccount bic(String bic) {
    this.bic = bic;
    return this;
  }

   /**
   * The BIC (Business Identifier Code) of the account
   * @return bic
  **/
  @Schema(description = "The BIC (Business Identifier Code) of the account")
  public String getBic() {
    return bic;
  }

  public void setBic(String bic) {
    this.bic = bic;
  }

  public BankAccount cardHolderName(String cardHolderName) {
    this.cardHolderName = cardHolderName;
    return this;
  }

   /**
   * The name on the bank account card
   * @return cardHolderName
  **/
  @Schema(description = "The name on the bank account card")
  public String getCardHolderName() {
    return cardHolderName;
  }

  public void setCardHolderName(String cardHolderName) {
    this.cardHolderName = cardHolderName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankAccount bankAccount = (BankAccount) o;
    return Objects.equals(this.number, bankAccount.number) &&
        Objects.equals(this.type, bankAccount.type) &&
        Objects.equals(this.bic, bankAccount.bic) &&
        Objects.equals(this.cardHolderName, bankAccount.cardHolderName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, type, bic, cardHolderName, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankAccount {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    cardHolderName: ").append(toIndentedString(cardHolderName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
