/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Address
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Address extends AdditionalFieldsBase {
  @SerializedName("country")
  private String country = null;

  @SerializedName("countryIso")
  private String countryIso = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("postcode")
  private String postcode = null;

  @SerializedName("street")
  private String street = null;

  @SerializedName("houseNumber")
  private Integer houseNumber = null;

  @SerializedName("houseNumberAddition")
  private String houseNumberAddition = null;

  @SerializedName("addressLine")
  private String addressLine = null;

  @SerializedName("location")
  private Location location = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("province")
  private String province = null;

  public Address country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The country name
   * @return country
  **/
  @Schema(description = "The country name")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Address countryIso(String countryIso) {
    this.countryIso = countryIso;
    return this;
  }

   /**
   * The country code, according to the [ISO 3166-2](https://www.iso.org/obp/ui/#search/code/) or [ISO 3166-3](https://www.iso.org/obp/ui/#search/code/) standards Validation: Country code must be either in the ISO2 or ISO3 format.
   * @return countryIso
  **/
  @Schema(description = "The country code, according to the [ISO 3166-2](https://www.iso.org/obp/ui/#search/code/) or [ISO 3166-3](https://www.iso.org/obp/ui/#search/code/) standards Validation: Country code must be either in the ISO2 or ISO3 format.")
  public String getCountryIso() {
    return countryIso;
  }

  public void setCountryIso(String countryIso) {
    this.countryIso = countryIso;
  }

  public Address city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city name
   * @return city
  **/
  @Schema(description = "The city name")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Address postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }

   /**
   * The postal code
   * @return postcode
  **/
  @Schema(description = "The postal code")
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }

  public Address street(String street) {
    this.street = street;
    return this;
  }

   /**
   * The street name
   * @return street
  **/
  @Schema(description = "The street name")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public Address houseNumber(Integer houseNumber) {
    this.houseNumber = houseNumber;
    return this;
  }

   /**
   * The house number
   * @return houseNumber
  **/
  @Schema(description = "The house number")
  public Integer getHouseNumber() {
    return houseNumber;
  }

  public void setHouseNumber(Integer houseNumber) {
    this.houseNumber = houseNumber;
  }

  public Address houseNumberAddition(String houseNumberAddition) {
    this.houseNumberAddition = houseNumberAddition;
    return this;
  }

   /**
   * The house number addition
   * @return houseNumberAddition
  **/
  @Schema(description = "The house number addition")
  public String getHouseNumberAddition() {
    return houseNumberAddition;
  }

  public void setHouseNumberAddition(String houseNumberAddition) {
    this.houseNumberAddition = houseNumberAddition;
  }

  public Address addressLine(String addressLine) {
    this.addressLine = addressLine;
    return this;
  }

   /**
   * The full address line
   * @return addressLine
  **/
  @Schema(description = "The full address line")
  public String getAddressLine() {
    return addressLine;
  }

  public void setAddressLine(String addressLine) {
    this.addressLine = addressLine;
  }

  public Address location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * The latitude and longitude of the address, according to the [Location](#location) Entity
   * @return location
  **/
  @Schema(description = "The latitude and longitude of the address, according to the [Location](#location) Entity")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public Address state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The state
   * @return state
  **/
  @Schema(description = "The state")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Address province(String province) {
    this.province = province;
    return this;
  }

   /**
   * The province
   * @return province
  **/
  @Schema(description = "The province")
  public String getProvince() {
    return province;
  }

  public void setProvince(String province) {
    this.province = province;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.country, address.country) &&
        Objects.equals(this.countryIso, address.countryIso) &&
        Objects.equals(this.city, address.city) &&
        Objects.equals(this.postcode, address.postcode) &&
        Objects.equals(this.street, address.street) &&
        Objects.equals(this.houseNumber, address.houseNumber) &&
        Objects.equals(this.houseNumberAddition, address.houseNumberAddition) &&
        Objects.equals(this.addressLine, address.addressLine) &&
        Objects.equals(this.location, address.location) &&
        Objects.equals(this.state, address.state) &&
        Objects.equals(this.province, address.province) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, countryIso, city, postcode, street, houseNumber, houseNumberAddition, addressLine, location, state, province, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryIso: ").append(toIndentedString(countryIso)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    houseNumberAddition: ").append(toIndentedString(houseNumberAddition)).append("\n");
    sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
