/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Contact
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Contact extends AdditionalFieldsBase {
  @SerializedName("type")
  private ContactType type = null;

  @SerializedName("value")
  private String value = null;

  public Contact type(ContactType type) {
    this.type = type;
    return this;
  }

   /**
   * The type of contact, according to the value list [ContactType](#contacttype)
   * @return type
  **/
  @Schema(description = "The type of contact, according to the value list [ContactType](#contacttype)")
  public ContactType getType() {
    return type;
  }

  public void setType(ContactType type) {
    this.type = type;
  }

  public Contact value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The contact details Validation: Email address is not well-formed or too long. Validation: Phone number length should not exceed 50 numbers. Validation: Contact value should not exceed a 1000 characters limit.
   * @return value
  **/
  @Schema(description = "The contact details Validation: Email address is not well-formed or too long. Validation: Phone number length should not exceed 50 numbers. Validation: Contact value should not exceed a 1000 characters limit.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.type, contact.type) &&
        Objects.equals(this.value, contact.value) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, value, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
