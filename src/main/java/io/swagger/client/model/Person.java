/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * Person
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Person extends LegalEntity {
    @SerializedName("firstName")
    private String firstName = null;

    @SerializedName("lastName")
    private String lastName = null;

    @SerializedName("fullName")
    private String fullName = null;

    @SerializedName("initials")
    private String initials = null;

    @SerializedName("gender")
    private String gender = null;

    @SerializedName("prefix")
    private String prefix = null;

    @SerializedName("birthCountryCode")
    private String birthCountryCode = null;

    @SerializedName("nationality")
    private String nationality = null;

    @SerializedName("birthDate")
    private OffsetDateTime birthDate = null;

    @SerializedName("occupation")
    private Occupation occupation = null;

    @SerializedName("fraudRegistration")
    private Boolean fraudRegistration = null;

    @SerializedName("numberOfActivePolicies")
    private Integer numberOfActivePolicies = null;

    @SerializedName("maritalStatus")
    private MaritalStatus maritalStatus = null;

    @SerializedName("numberOfCancellations")
    private Integer numberOfCancellations = null;

    @SerializedName("claimIntoxication")
    private Boolean claimIntoxication = null;

    public Person firstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * The first name(s)
     *
     * @return firstName
     **/
    @Schema(description = "The first name(s)")
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public Person lastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * The surname or family name
     *
     * @return lastName
     **/
    @Schema(description = "The surname or family name")
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public Person fullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * The first name(s) and family name(s) combined
     *
     * @return fullName
     **/
    @Schema(description = "The first name(s) and family name(s) combined")
    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public Person initials(String initials) {
        this.initials = initials;
        return this;
    }

    /**
     * The initials, stripped from all additional characters such as points, commas and dashes
     *
     * @return initials
     **/
    @Schema(description = "The initials, stripped from all additional characters such as points, commas and dashes")
    public String getInitials() {
        return initials;
    }

    public void setInitials(String initials) {
        this.initials = initials;
    }

    public Person gender(String gender) {
        this.gender = gender;
        return this;
    }

    /**
     * The gender of the person
     *
     * @return gender
     **/
    @Schema(description = "The gender of the person")
    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public Person prefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * The title before a person&#x27;s name
     *
     * @return prefix
     **/
    @Schema(description = "The title before a person's name")
    public String getPrefix() {
        return prefix;
    }

    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    public Person birthCountryCode(String birthCountryCode) {
        this.birthCountryCode = birthCountryCode;
        return this;
    }

    /**
     * The country code, according to the [ISO 3166-2](https://www.iso.org/obp/ui/#search/code/) or [ISO 3166-3](https://www.iso.org/obp/ui/#search/code/) standards Validation: Country code must be either in the ISO2 or ISO3 format.
     *
     * @return birthCountryCode
     **/
    @Schema(description = "The country code, according to the [ISO 3166-2](https://www.iso.org/obp/ui/#search/code/) or [ISO 3166-3](https://www.iso.org/obp/ui/#search/code/) standards Validation: Country code must be either in the ISO2 or ISO3 format.")
    public String getBirthCountryCode() {
        return birthCountryCode;
    }

    public void setBirthCountryCode(String birthCountryCode) {
        this.birthCountryCode = birthCountryCode;
    }

    public Person nationality(String nationality) {
        this.nationality = nationality;
        return this;
    }

    /**
     * The nationality of the person
     *
     * @return nationality
     **/
    @Schema(description = "The nationality of the person")
    public String getNationality() {
        return nationality;
    }

    public void setNationality(String nationality) {
        this.nationality = nationality;
    }

    public Person birthDate(OffsetDateTime birthDate) {
        this.birthDate = birthDate;
        return this;
    }

    /**
     * The birth date of the person Validation: Date if not empty must be in a range between +-150 years from now.
     *
     * @return birthDate
     **/
    @Schema(description = "The birth date of the person Validation: Date if not empty must be in a range between +-150 years from now.")
    public OffsetDateTime getBirthDate() {
        return birthDate;
    }

    public void setBirthDate(OffsetDateTime birthDate) {
        this.birthDate = birthDate;
    }

    public Person occupation(Occupation occupation) {
        this.occupation = occupation;
        return this;
    }

    /**
     * The category of occupation, according to the value list [Occupation](#occupation)
     *
     * @return occupation
     **/
    @Schema(description = "The category of occupation, according to the value list [Occupation](#occupation)")
    public Occupation getOccupation() {
        return occupation;
    }

    public void setOccupation(Occupation occupation) {
        this.occupation = occupation;
    }

    public Person fraudRegistration(Boolean fraudRegistration) {
        this.fraudRegistration = fraudRegistration;
        return this;
    }

    /**
     * Boolean value indicating whether the person is registered in an internal or external fraud register
     *
     * @return fraudRegistration
     **/
    @Schema(description = "Boolean value indicating whether the person is registered in an internal or external fraud register")
    public Boolean isFraudRegistration() {
        return fraudRegistration;
    }

    public void setFraudRegistration(Boolean fraudRegistration) {
        this.fraudRegistration = fraudRegistration;
    }

    public Person numberOfActivePolicies(Integer numberOfActivePolicies) {
        this.numberOfActivePolicies = numberOfActivePolicies;
        return this;
    }

    /**
     * The number of active policies at the insurance company
     *
     * @return numberOfActivePolicies
     **/
    @Schema(description = "The number of active policies at the insurance company")
    public Integer getNumberOfActivePolicies() {
        return numberOfActivePolicies;
    }

    public void setNumberOfActivePolicies(Integer numberOfActivePolicies) {
        this.numberOfActivePolicies = numberOfActivePolicies;
    }

    public Person maritalStatus(MaritalStatus maritalStatus) {
        this.maritalStatus = maritalStatus;
        return this;
    }

    /**
     * The marital status of the person
     *
     * @return maritalStatus
     **/
    @Schema(description = "The marital status of the person")
    public MaritalStatus getMaritalStatus() {
        return maritalStatus;
    }

    public void setMaritalStatus(MaritalStatus maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    public Person numberOfCancellations(Integer numberOfCancellations) {
        this.numberOfCancellations = numberOfCancellations;
        return this;
    }

    /**
     * The number of policy cancellations known at the insurance company Validation: Person number of cancellations must be greater than 0
     *
     * @return numberOfCancellations
     **/
    @Schema(description = "The number of policy cancellations known at the insurance company Validation: Person number of cancellations must be greater than 0")
    public Integer getNumberOfCancellations() {
        return numberOfCancellations;
    }

    public void setNumberOfCancellations(Integer numberOfCancellations) {
        this.numberOfCancellations = numberOfCancellations;
    }

    public Person claimIntoxication(Boolean claimIntoxication) {
        this.claimIntoxication = claimIntoxication;
        return this;
    }

    /**
     * Boolean value indicating whether the person was under the influence of alcohol or drugs during the claim
     *
     * @return claimIntoxication
     **/
    @Schema(description = "Boolean value indicating whether the person was under the influence of alcohol or drugs during the claim")
    public Boolean isClaimIntoxication() {
        return claimIntoxication;
    }

    public void setClaimIntoxication(Boolean claimIntoxication) {
        this.claimIntoxication = claimIntoxication;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Person person = (Person) o;
        return Objects.equals(this.firstName, person.firstName) &&
                Objects.equals(this.lastName, person.lastName) &&
                Objects.equals(this.fullName, person.fullName) &&
                Objects.equals(this.initials, person.initials) &&
                Objects.equals(this.gender, person.gender) &&
                Objects.equals(this.prefix, person.prefix) &&
                Objects.equals(this.birthCountryCode, person.birthCountryCode) &&
                Objects.equals(this.nationality, person.nationality) &&
                Objects.equals(this.birthDate, person.birthDate) &&
                Objects.equals(this.occupation, person.occupation) &&
                Objects.equals(this.fraudRegistration, person.fraudRegistration) &&
                Objects.equals(this.numberOfActivePolicies, person.numberOfActivePolicies) &&
                Objects.equals(this.maritalStatus, person.maritalStatus) &&
                Objects.equals(this.numberOfCancellations, person.numberOfCancellations) &&
                Objects.equals(this.claimIntoxication, person.claimIntoxication) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(firstName, lastName, fullName, initials, gender, prefix, birthCountryCode, nationality, birthDate, occupation, fraudRegistration, numberOfActivePolicies, maritalStatus, numberOfCancellations, claimIntoxication, super.hashCode());
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Person {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
        sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
        sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
        sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
        sb.append("    birthCountryCode: ").append(toIndentedString(birthCountryCode)).append("\n");
        sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
        sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
        sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
        sb.append("    fraudRegistration: ").append(toIndentedString(fraudRegistration)).append("\n");
        sb.append("    numberOfActivePolicies: ").append(toIndentedString(numberOfActivePolicies)).append("\n");
        sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
        sb.append("    numberOfCancellations: ").append(toIndentedString(numberOfCancellations)).append("\n");
        sb.append("    claimIntoxication: ").append(toIndentedString(claimIntoxication)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
