/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AdditionalFieldsBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * Note
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Note extends AdditionalFieldsBase {
  @SerializedName("text")
  private String text = null;

  @SerializedName("date")
  private OffsetDateTime date = null;

  public Note text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The text of the note. This field may not exceed 5000 characters
   * @return text
  **/
  @Schema(description = "The text of the note. This field may not exceed 5000 characters")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Note date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * The date of entry of the respective note Validation: Date if not empty must be in a range between +-150 years from now.
   * @return date
  **/
  @Schema(description = "The date of entry of the respective note Validation: Date if not empty must be in a range between +-150 years from now.")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Note note = (Note) o;
    return Objects.equals(this.text, note.text) &&
        Objects.equals(this.date, note.date) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, date, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Note {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
