/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Property
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Property extends Objekt {
  @SerializedName("usage")
  private Objekt usage = null;

  @SerializedName("value")
  private Double value = null;

  @SerializedName("constructionType")
  private String constructionType = null;

  @SerializedName("constructionYear")
  private Integer constructionYear = null;

  @SerializedName("roofing")
  private String roofing = null;

  @SerializedName("identificationNumber")
  private String identificationNumber = null;

  @SerializedName("solarPanels")
  private Boolean solarPanels = null;

  @SerializedName("securitySystem")
  private Boolean securitySystem = null;

  @SerializedName("address")
  private Objekt address = null;

  public Property usage(Objekt usage) {
    this.usage = usage;
    return this;
  }

   /**
   * The destination or use of the risk address
   * @return usage
  **/
  @Schema(description = "The destination or use of the risk address")
  public Objekt getUsage() {
    return usage;
  }

  public void setUsage(Objekt usage) {
    this.usage = usage;
  }

  public Property value(Double value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the insured object
   * @return value
  **/
  @Schema(description = "The value of the insured object")
  public Double getValue() {
    return value;
  }

  public void setValue(Double value) {
    this.value = value;
  }

  public Property constructionType(String constructionType) {
    this.constructionType = constructionType;
    return this;
  }

   /**
   * The construction type of the building
   * @return constructionType
  **/
  @Schema(description = "The construction type of the building")
  public String getConstructionType() {
    return constructionType;
  }

  public void setConstructionType(String constructionType) {
    this.constructionType = constructionType;
  }

  public Property constructionYear(Integer constructionYear) {
    this.constructionYear = constructionYear;
    return this;
  }

   /**
   * The construction year of the building
   * @return constructionYear
  **/
  @Schema(description = "The construction year of the building")
  public Integer getConstructionYear() {
    return constructionYear;
  }

  public void setConstructionYear(Integer constructionYear) {
    this.constructionYear = constructionYear;
  }

  public Property roofing(String roofing) {
    this.roofing = roofing;
    return this;
  }

   /**
   * The type of roofing
   * @return roofing
  **/
  @Schema(description = "The type of roofing")
  public String getRoofing() {
    return roofing;
  }

  public void setRoofing(String roofing) {
    this.roofing = roofing;
  }

  public Property identificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
    return this;
  }

   /**
   * A unique identification number for the insured property
   * @return identificationNumber
  **/
  @Schema(description = "A unique identification number for the insured property")
  public String getIdentificationNumber() {
    return identificationNumber;
  }

  public void setIdentificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
  }

  public Property solarPanels(Boolean solarPanels) {
    this.solarPanels = solarPanels;
    return this;
  }

   /**
   * Boolean value indicating whether there are solar panels installed on the roof
   * @return solarPanels
  **/
  @Schema(description = "Boolean value indicating whether there are solar panels installed on the roof")
  public Boolean isSolarPanels() {
    return solarPanels;
  }

  public void setSolarPanels(Boolean solarPanels) {
    this.solarPanels = solarPanels;
  }

  public Property securitySystem(Boolean securitySystem) {
    this.securitySystem = securitySystem;
    return this;
  }

   /**
   * Boolean value indicating whether there is a certified security system present in the house
   * @return securitySystem
  **/
  @Schema(description = "Boolean value indicating whether there is a certified security system present in the house")
  public Boolean isSecuritySystem() {
    return securitySystem;
  }

  public void setSecuritySystem(Boolean securitySystem) {
    this.securitySystem = securitySystem;
  }

  public Property address(Objekt address) {
    this.address = address;
    return this;
  }

   /**
   * The address of the realty, described as an [Address](#address) entity
   * @return address
  **/
  @Schema(description = "The address of the realty, described as an [Address](#address) entity")
  public Objekt getAddress() {
    return address;
  }

  public void setAddress(Objekt address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Property property = (Property) o;
    return Objects.equals(this.usage, property.usage) &&
        Objects.equals(this.value, property.value) &&
        Objects.equals(this.constructionType, property.constructionType) &&
        Objects.equals(this.constructionYear, property.constructionYear) &&
        Objects.equals(this.roofing, property.roofing) &&
        Objects.equals(this.identificationNumber, property.identificationNumber) &&
        Objects.equals(this.solarPanels, property.solarPanels) &&
        Objects.equals(this.securitySystem, property.securitySystem) &&
        Objects.equals(this.address, property.address) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(usage, value, constructionType, constructionYear, roofing, identificationNumber, solarPanels, securitySystem, address, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Property {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    constructionType: ").append(toIndentedString(constructionType)).append("\n");
    sb.append("    constructionYear: ").append(toIndentedString(constructionYear)).append("\n");
    sb.append("    roofing: ").append(toIndentedString(roofing)).append("\n");
    sb.append("    identificationNumber: ").append(toIndentedString(identificationNumber)).append("\n");
    sb.append("    solarPanels: ").append(toIndentedString(solarPanels)).append("\n");
    sb.append("    securitySystem: ").append(toIndentedString(securitySystem)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
