/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Coverage;
import io.swagger.client.model.LegalEntityRef;
import io.swagger.client.model.LegalEntityRefOfCompany;
import io.swagger.client.model.LegalEntityRefOfPerson;
import io.swagger.client.model.ObjectInsured;
import io.swagger.client.model.Policy;
import io.swagger.client.model.PolicyChange;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * AutoPolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class AutoPolicy extends Policy {
  @SerializedName("regularDrivers")
  private List<LegalEntityRefOfPerson> regularDrivers = null;

  @SerializedName("mileage")
  private Integer mileage = null;

  public AutoPolicy regularDrivers(List<LegalEntityRefOfPerson> regularDrivers) {
    this.regularDrivers = regularDrivers;
    return this;
  }

  public AutoPolicy addRegularDriversItem(LegalEntityRefOfPerson regularDriversItem) {
    if (this.regularDrivers == null) {
      this.regularDrivers = new ArrayList<LegalEntityRefOfPerson>();
    }
    this.regularDrivers.add(regularDriversItem);
    return this;
  }

   /**
   * Array of references to the regular driver(s) (of type [Person](#person)) of the vehicle covered by the policy
   * @return regularDrivers
  **/
  @Schema(description = "Array of references to the regular driver(s) (of type [Person](#person)) of the vehicle covered by the policy")
  public List<LegalEntityRefOfPerson> getRegularDrivers() {
    return regularDrivers;
  }

  public void setRegularDrivers(List<LegalEntityRefOfPerson> regularDrivers) {
    this.regularDrivers = regularDrivers;
  }

  public AutoPolicy mileage(Integer mileage) {
    this.mileage = mileage;
    return this;
  }

   /**
   * The mileage the auto policy is covered under
   * @return mileage
  **/
  @Schema(description = "The mileage the auto policy is covered under")
  public Integer getMileage() {
    return mileage;
  }

  public void setMileage(Integer mileage) {
    this.mileage = mileage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoPolicy autoPolicy = (AutoPolicy) o;
    return Objects.equals(this.regularDrivers, autoPolicy.regularDrivers) &&
        Objects.equals(this.mileage, autoPolicy.mileage) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regularDrivers, mileage, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoPolicy {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    regularDrivers: ").append(toIndentedString(regularDrivers)).append("\n");
    sb.append("    mileage: ").append(toIndentedString(mileage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
