/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

/**
 * SubClaimPropertyDamage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class SubClaimPropertyDamage extends SubClaim {
  @SerializedName("property")
  private Objekt property = null;

  @SerializedName("repairer")
  private Objekt repairer = null;

  @SerializedName("surveyor")
  private Objekt surveyor = null;

  @SerializedName("personRef")
  private String personRef = null;

  @SerializedName("damageList")
  private List<String> damageList = null;

  public SubClaimPropertyDamage property(Objekt property) {
    this.property = property;
    return this;
  }

   /**
   * The property, of type [Property](#property) that was damaged
   * @return property
  **/
  @Schema(description = "The property, of type [Property](#property) that was damaged")
  public Objekt getProperty() {
    return property;
  }

  public void setProperty(Objekt property) {
    this.property = property;
  }

  public SubClaimPropertyDamage repairer(Objekt repairer) {
    this.repairer = repairer;
    return this;
  }

   /**
   * A reference to a [LegalEntity](#legalentity) (of type [Company](#company)) responsible for repairing the property
   * @return repairer
  **/
  @Schema(description = "A reference to a [LegalEntity](#legalentity) (of type [Company](#company)) responsible for repairing the property")
  public Objekt getRepairer() {
    return repairer;
  }

  public void setRepairer(Objekt repairer) {
    this.repairer = repairer;
  }

  public SubClaimPropertyDamage surveyor(Objekt surveyor) {
    this.surveyor = surveyor;
    return this;
  }

   /**
   * A reference to a [LegalEntity](#legalentity) (of type [Person](#person)) responsible for surveying the property
   * @return surveyor
  **/
  @Schema(description = "A reference to a [LegalEntity](#legalentity) (of type [Person](#person)) responsible for surveying the property")
  public Objekt getSurveyor() {
    return surveyor;
  }

  public void setSurveyor(Objekt surveyor) {
    this.surveyor = surveyor;
  }

  public SubClaimPropertyDamage personRef(String personRef) {
    this.personRef = personRef;
    return this;
  }

   /**
   * Get personRef
   * @return personRef
  **/
  @Schema(description = "")
  public String getPersonRef() {
    return personRef;
  }

  public void setPersonRef(String personRef) {
    this.personRef = personRef;
  }

  public SubClaimPropertyDamage damageList(List<String> damageList) {
    this.damageList = damageList;
    return this;
  }

  public SubClaimPropertyDamage addDamageListItem(String damageListItem) {
    if (this.damageList == null) {
      this.damageList = new ArrayList<String>();
    }
    this.damageList.add(damageListItem);
    return this;
  }

   /**
   * A list of damages to the object
   * @return damageList
  **/
  @Schema(description = "A list of damages to the object")
  public List<String> getDamageList() {
    return damageList;
  }

  public void setDamageList(List<String> damageList) {
    this.damageList = damageList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubClaimPropertyDamage subClaimPropertyDamage = (SubClaimPropertyDamage) o;
    return Objects.equals(this.property, subClaimPropertyDamage.property) &&
        Objects.equals(this.repairer, subClaimPropertyDamage.repairer) &&
        Objects.equals(this.surveyor, subClaimPropertyDamage.surveyor) &&
        Objects.equals(this.personRef, subClaimPropertyDamage.personRef) &&
        Objects.equals(this.damageList, subClaimPropertyDamage.damageList) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(property, repairer, surveyor, personRef, damageList, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubClaimPropertyDamage {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    repairer: ").append(toIndentedString(repairer)).append("\n");
    sb.append("    surveyor: ").append(toIndentedString(surveyor)).append("\n");
    sb.append("    personRef: ").append(toIndentedString(personRef)).append("\n");
    sb.append("    damageList: ").append(toIndentedString(damageList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
