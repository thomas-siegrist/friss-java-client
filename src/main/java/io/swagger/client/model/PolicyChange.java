/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AdditionalFieldsBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * PolicyChange
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class PolicyChange extends AdditionalFieldsBase {
  @SerializedName("type")
  private String type = null;

  @SerializedName("date")
  private OffsetDateTime date = null;

  public PolicyChange type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The policy change type
   * @return type
  **/
  @Schema(description = "The policy change type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public PolicyChange date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * The policy change date Validation: Date if not empty must be in a range between +-150 years from now.
   * @return date
  **/
  @Schema(description = "The policy change date Validation: Date if not empty must be in a range between +-150 years from now.")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyChange policyChange = (PolicyChange) o;
    return Objects.equals(this.type, policyChange.type) &&
        Objects.equals(this.date, policyChange.date) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, date, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyChange {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
