/*
 * FRISS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * Identification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-03T11:30:23.717Z[GMT]")
public class Identification extends AdditionalFieldsBase {
  @SerializedName("type")
  private IdentificationType type = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("expiryDate")
  private OffsetDateTime expiryDate = null;

  public Identification type(IdentificationType type) {
    this.type = type;
    return this;
  }

   /**
   * The type of identification, according to the value list [IdentificationType](#identificationtype)
   * @return type
  **/
  @Schema(description = "The type of identification, according to the value list [IdentificationType](#identificationtype)")
  public IdentificationType getType() {
    return type;
  }

  public void setType(IdentificationType type) {
    this.type = type;
  }

  public Identification value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The identification number
   * @return value
  **/
  @Schema(description = "The identification number")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public Identification expiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * The expiration date of the idenfication Validation: Date if not empty must be in a range between +-150 years from now.
   * @return expiryDate
  **/
  @Schema(description = "The expiration date of the idenfication Validation: Date if not empty must be in a range between +-150 years from now.")
  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Identification identification = (Identification) o;
    return Objects.equals(this.type, identification.type) &&
        Objects.equals(this.value, identification.value) &&
        Objects.equals(this.expiryDate, identification.expiryDate) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, value, expiryDate, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Identification {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
